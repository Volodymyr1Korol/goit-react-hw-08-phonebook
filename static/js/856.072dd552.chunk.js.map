{"version":3,"file":"static/js/856.072dd552.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","Pages/ContactsPage/ContactsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  max-width: 640px;\n`;\n\nexport const FormInput = styled.input`\n  width: 100%;\n  height: 40px;\n  margin-bottom: 10px;\n  outline: none;\n  border: solid 2px teal;\n  border-radius: 5px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border: none;\n    border: solid 2px red;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const FormButtom = styled.button`\n  width: 150px;\n  height: 40px;\n  border-radius: 5px;\n  color: white;\n  background-color: teal;\n  border: none;\n  margin: auto;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: red;\n  }\n`;\n","export const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter.text;\n","import { useState } from 'react';\nimport { Form, FormInput, FormButtom } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/selectors';\nimport Notiflix from 'notiflix';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleAddContact = e => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name === name.trim())) {\n      Notiflix.Notify.warning('This name is taken!', {\n        position: 'center-top',\n      });\n      return;\n    }\n    dispatch(addContact({ name, number }));\n\n    resetForm();\n  };\n\n  return (\n    <Form onSubmit={handleAddContact}>\n      <FormInput\n        value={name}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        autoComplete=\"off\"\n        placeholder=\"Enter contact name\"\n        margin={'normal'}\n        label=\"Name\"\n      />\n\n      <FormInput\n        value={number}\n        onChange={handleChange}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        autoComplete=\"off\"\n        placeholder=\"111-111-1111\"\n      />\n\n      <FormButtom\n        type=\"submit\"\n        size=\"large\"\n        sx={{ mt: 3, border: '1px solid black' }}\n      >\n        Add contact\n      </FormButtom>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\nexport const ContactListContact = styled.ul`\n  padding: 20px;\n`;\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: 640px;\n  margin-bottom: 15px;\n  padding: 10px;\n\n  border-bottom: solid 2px black;\n  &:last-of-type {\n    margin-bottom: 0;\n    border-bottom: none;\n  }\n`;\nexport const ContactText = styled.p`\n  font-size: 20px;\n`;\nexport const ContactButtom = styled.button`\n  width: 150px;\n  height: 40px;\n  border-radius: 5px;\n  color: white;\n  background-color: teal;\n  border: none;\n  margin: 0px, auto, 0px, auto;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: red;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContact,\n} from 'redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { CircularProgress } from '@mui/material';\nimport {\n  ContactButtom,\n  ContactItem,\n  ContactListContact,\n  ContactText,\n} from './ContactList.styled';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const { contacts, isLoading, error } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <ContactListContact>\n      {isLoading && <CircularProgress />}\n      {error && <p>{error}</p>}\n      {contacts.length > 0 && (\n        <ContactText>Total contacts: {contacts.length}</ContactText>\n      )}\n      {contacts.length > 0 &&\n        filteredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <ContactText>\n              {name}:{number}\n            </ContactText>\n            <ContactButtom onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </ContactButtom>\n          </ContactItem>\n        ))}\n    </ContactListContact>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const FilterBox = styled.div`\n  padding: 20px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 300px;\n  height: 40px;\n  margin-bottom: 10px;\n  outline: none;\n  border: solid 2px teal;\n  border-radius: 5px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border: none;\n    border: solid 2px red;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { updateFilter } from '../../redux/filter/filter-slice';\nimport { selectFilter } from '../../redux/selectors';\nimport { FilterInput, FilterBox } from './Filter.styled';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    dispatch(updateFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterBox>\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n        placeholder=\"Filter contacts by name\"\n      />\n    </FilterBox>\n  );\n}\n","import React from 'react';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport Filter from '../../components/Filter/Filter';\n\nconst ContactsPage = () => {\n  const { contacts } = useSelector(selectContacts);\n  return (\n    <>\n      <ContactForm />\n      {contacts.length > 0 && <Filter />}\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","FormInput","FormButtom","selectContacts","state","contacts","selectFilter","filter","text","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","onSubmit","preventDefault","find","contact","trim","Notiflix","position","addContact","onChange","type","pattern","title","required","autoComplete","placeholder","margin","label","size","sx","mt","border","ContactListContact","ContactItem","ContactText","ContactButtom","ContactList","isLoading","error","useEffect","fetchContacts","filteredContacts","normalizedFilter","toLowerCase","includes","getFilteredContacts","CircularProgress","length","map","id","onClick","deleteContact","FilterBox","FilterInput","Filter","updateFilter"],"sourceRoot":""}